

using Domain;

namespace Persistence;

public class Seed
{
    public static async Task SeedData(DataContext context)
    {
        if (!context.Vulnerabilities.Any())
        {
            var vulnerability1 = new Vulnerability
            {
                Type = "vulnerability",
                SpecVersion = "2.1",
                Id = $"vulnerability--{Guid.NewGuid()}",
                Created = DateTime.UtcNow,
                Modified = DateTime.UtcNow,
                Name = "SQL Injection Vulnerability",
                Description = "This vulnerability allows attackers to execute arbitrary SQL queries."
            };

            var vulnerability2 = new Vulnerability
            {
                Type = "vulnerability",
                SpecVersion = "2.1",
                Id = $"vulnerability--{Guid.NewGuid()}",
                Created = DateTime.UtcNow.AddDays(-1),
                Modified = DateTime.UtcNow.AddDays(-1),
                Name = "Cross-Site Scripting (XSS) Vulnerability",
                Description = "Attackers can inject malicious scripts into web pages viewed by other users."
            };

            var vulnerability3 = new Vulnerability
            {
                Type = "vulnerability",
                SpecVersion = "2.1",
                Id = $"vulnerability--{Guid.NewGuid()}",
                Created = DateTime.UtcNow.AddDays(-2),
                Modified = DateTime.UtcNow.AddDays(-2),
                Name = "Remote Code Execution Vulnerability",
                Description = "Allows attackers to execute code on a remote server or device."
            };

            var vulnerabilities = new List<Vulnerability>{ vulnerability1, vulnerability2, vulnerability3 };

            await context.Vulnerabilities.AddRangeAsync(vulnerabilities);
            await context.SaveChangesAsync();
        }
    }
}
