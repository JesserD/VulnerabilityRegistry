using Application.Vulnerabilities;
using AutoFixture;
using AutoMapper;
using Domain;
using Moq;
using Persistence;

namespace UnitTests.Application.Common;

public abstract class HandlerTestSuite
{
    protected static readonly Fixture _fixture = new();
    protected readonly Mock<IMapper> _mockMapper;
    protected readonly Mock<IVulnerabilityRepository> _mockVulnerabilityRepository;
    protected readonly CancellationToken _mockCancellationToken;

    public HandlerTestSuite()
    {
        _mockVulnerabilityRepository = new Mock<IVulnerabilityRepository>();
        _mockCancellationToken = _fixture.Create<CancellationToken>();
        _mockMapper = new Mock<IMapper>();
        _mockMapper.Setup(m => m.ConfigurationProvider)
            .Returns(new MapperConfiguration(cfg => cfg.CreateMap<Vulnerability, VulnerabilityDto>()));
    }
}
